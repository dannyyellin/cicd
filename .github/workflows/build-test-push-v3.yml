name: build-test-push-v3
on:
  push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_COURSE_USERNAME }}
          password: ${{ secrets.DOCKER_COURSE_PASSWORD }}
    - name: Set DATE
      run: echo "DATE=$(date -I)" >> $GITHUB_ENV
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile.setport --tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
    - name: Push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
        docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2 \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
        docker push \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
  test:
    needs: build
    runs-on: ubuntu-latest
    services:
      wordcontainer:
        image: dannyteaching/wordsvr-v2:latest
        ports:
          - 8000:8000
    steps:
      - name: Check-image-running
        run: docker ps
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest # not using yet lint checker like ruff
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest  # additionally use ruff or other lint checkers
        run: |
          cd pytest-code
          pytest -v test_word.py > GH_test_results.txt
      - name: view results of test
        if: always()
          cat GH_test_results.txt
