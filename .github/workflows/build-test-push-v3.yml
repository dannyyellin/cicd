name: build-and-push-v3
on:
  push:
#      branches: [ master ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_COURSE_USERNAME }}
          password: ${{ secrets.DOCKER_COURSE_PASSWORD }}
    - name: Set DATE
      run: echo "DATE=$(date -I)" >> $GITHUB_ENV
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile.setport --tag \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
        docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2 \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
    - name: start up the container just built
      run: docker run -p8000:8000 ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
    - name: Set up Python
      uses: actions/setup-python@v4
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest # not using yet lint checker like ruff 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#    - name: Lint with ruff
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#        # default set of ruff rules with GitHub Annotations
#        ruff --format=github --target-version=py37 .
    - name: Test with pytest
      run: |
        pytest pytest-code/tests.py > test_results.txt
        cat test_results.txt
    - name: Push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
        docker push \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
        
