name: build-and-push-v3
on:
  push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_COURSE_USERNAME }}
          password: ${{ secrets.DOCKER_COURSE_PASSWORD }}
    - name: Set DATE
      run: echo "DATE=$(date -I)" >> $GITHUB_ENV
    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile.setport --tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
    - name: Push to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
        docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2 \
        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
##       push the tagged image also
#        docker push \
#        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
#  test:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#    - name: Checkout
#      uses: /actions/checkout@v3
#    - name: run image from previous job
#      run: |
#        docker run -d -p 8000:8000 dannyteaching/wordsvr-v2:latest
#        echo hello
#    - name: check if app is running
#      run: docker ps
#    services:
#      wordcontainer:
#        image: wordsvr-v2:latest # jobs.build-id.container.wordsvr-v2:latest  # jobs.<job_id>.container.image
#        ports:
#          - 8000:8000
#      with:
#        docker login localhost:8080
#    steps:
#      - name: Check-image-running
#        run: docker ps
#
#      ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
#    - name: Log in to Docker Hub
#      uses: docker/login-action@v2
#      with:
#          username: ${{ secrets.DOCKER_COURSE_USERNAME }}
#          password: ${{ secrets.DOCKER_COURSE_PASSWORD }}
#    - name: Set DATE
#      run: echo "DATE=$(date -I)" >> $GITHUB_ENV
#    - name: Build the Docker image
#      run: |
#        docker build . --file Dockerfile.setport --tag \
#        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
#        docker tag ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2 \
#        ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
#
#  test:
#    runs-on: ubuntu-latest
#    services:
#      wordcontainer:
#        image: dannyteaching/wordsvr-v2:latest  #${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
#        ports:
#          - 8000:8000
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#      - name: check if app is running
#        run: docker ps
#      - name: Set up Python
#        uses: actions/setup-python@v4
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install pytest # not using yet lint checker like ruff
#          pip install requests
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#       -
#      - name: Lint with ruff
#        run: |
#          # stop the build if there are Python syntax errors or undefined names
#          ruff --format=github --select=E9,F63,F7,F82 --target-version=py37 .
#          # default set of ruff rules with GitHub Annotations
#          ruff --format=github --target-version=py37 .
#
#      - name: Test with pytest
#        if: always()
#        run: |
#          echo directory is
#          echo $(pwd)
#          cd pytest-code
#          pytest test_word.py > GH_test_results.txt
#          echo "directory is"
#          echo $(pwd)
#      - name: Archive Rest Results
#        if: always()
#        uses: actions/upload-artifact@v1
#        with:
#          name: GH_test-results
#          path: pytest-code
#
#      - name: post pytest
#        if: always()
#        run: |
#          echo "directory is"
#          echo $(pwd)
#          cd pytest-code
#          echo "directory is"
#          echo $(pwd)
#          cat GH_test_results.txt
#
#      - name: Push to Docker Hub
#        run: |
#          docker push ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2
#          docker push \
#          ${{ secrets.DOCKER_COURSE_USERNAME }}/wordsvr-v2:${{ env.DATE }}
#
